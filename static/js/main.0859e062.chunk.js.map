{"version":3,"sources":["components/Header/index.js","components/Score/index.js","components/BugCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Score","props","score","highScore","alt","src","BugCard","onClick","shuffleBug","id","name","image","Wrapper","children","App","state","bugs","clicked","_","shuffle","_this","setState","includes","Math","max","push","console","log","_this2","this","components_Wrapper","components_Header","components_Score","map","bug","components_BugCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+zDAWeA,MARf,WACE,OAAQC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACvBH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,4FCOaE,MAVf,SAAeC,GACb,OAAQL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACvBH,EAAAC,EAAAC,cAAA,oBAAYG,EAAMC,MAAlB,mBAAyCD,EAAME,WAC/CP,EAAAC,EAAAC,cAAA,OAAKM,IAAI,aAAaC,IAAI,wEAC1BT,EAAAC,EAAAC,cAAA,mBCkBaQ,MAtBf,SAAiBL,GACf,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOQ,QAAS,WAAQN,EAAMO,WAAWP,EAAMQ,MAM5Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAKH,EAAMS,KAAML,IAAKJ,EAAMU,SAInCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACTH,EAAAC,EAAAC,cAAA,cAAMG,EAAMS,KAAZ,cCVGE,MAJf,SAAiBX,GACf,OAAOL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWE,EAAMY,kCCgH1BC,6MAzGbC,MAAQ,CACNC,OACAC,QAAU,GACVf,MAAQ,EACRC,UAAW,KAObK,WAAa,SAAAC,GACX,IAAIO,EAAOE,IAAEC,QAAQC,EAAKL,MAAMC,MAChCI,EAAKC,SAAS,CAACL,SAEXI,EAAKL,MAAME,QAAQK,SAASb,GAC9BW,EAAKC,SAAS,CAAClB,UAAYoB,KAAKC,IAAIJ,EAAKL,MAAMZ,UAAWiB,EAAKL,MAAMb,OAAQA,MAAM,EAAGe,QAAS,MAEjGG,EAAKL,MAAMb,QAASkB,EAAKL,MAAME,QAAQQ,KAAKhB,GAAKiB,QAAQC,IAAKP,EAAKL,MAAME,SAAUG,EAAKC,SAAS,CAACJ,QAASG,EAAKL,MAAME,oFAiE/G,IAAAW,EAAAC,KACP,OAEEjC,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACkC,EAAD,CAAO9B,MAAO2B,KAAKd,MAAMb,MAAOC,UAAW0B,KAAKd,MAAMZ,YAErD0B,KAAKd,MAAMC,KAAKiB,IAAI,SAAAC,GAAG,OACtBtC,EAAAC,EAAAC,cAACqC,EAAD,CACE3B,WAAYoB,EAAKpB,WACjBC,GAAIyB,EAAIzB,GACR2B,IAAKF,EAAIzB,GACTC,KAAMwB,EAAIxB,KACVC,MAAOuB,EAAIvB,kBAlGL0B,mBCJlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0859e062.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (<div className=\"header\">\n  <h1>SLUG BUG CLICKY GAME! </h1>   \n  <h2>Click on an Image to earnpoints but don't click on any more than once!</h2>\n\n  </div>);\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return (<div className=\"score\">\n  <h1>SCORE: {props.score} || HIGH SCORE: {props.highScore}</h1>\n  <img alt=\"punchbuggy\" src=\"http://kamranjune.github.io/clickygame/assets/images/punchbuggy.jpg\"/>\n  <br/>\n  \n\n  </div>);\n}\n\nexport default Score;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction BugCard(props) {\n  return (\n    <div className=\"card\" onClick={() => { props.shuffleBug(props.id); \n    \n    \n    } }>\n      \n     \n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n\n\n      </div>\n      <div className=\"content\">\n            <h3> {props.name} </h3>\n          \n      </div>\n     \n    </div>\n  );\n}\n\nexport default BugCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Score from \"./components/Score\";\nimport BugCard from \"./components/BugCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport bugs from \"./bugs.json\";\nimport _ from 'lodash';\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    bugs,\n    clicked : [],\n    score : 0,\n    highScore: 0\n  };\n\n  //store boolean true false whether guy won or lost\n  //clear score, put up alert that says you lost or won\n  //copy score to high\n\n  shuffleBug = id => {\n    let bugs = _.shuffle(this.state.bugs);\n    this.setState({bugs});\n    \n    if (this.state.clicked.includes(id)) {\n      this.setState({highScore : Math.max(this.state.highScore, this.state.score), score:0, clicked :[]}); \n    } else{ \n    this.state.score++; this.state.clicked.push(id); console.log (this.state.clicked); this.setState({clicked: this.state.clicked}); }\n     \n    // this.state.clicked.includes(id) ? this.state.clicked = [] : console.log (\"false\");\n    // this.state.clicked.includes(id) ? this.state.score = 0 : console.log (\"false\");\n\n    // if (this.state.clicked.includes(id)) {\n    //   this.state.highScore = this.state.score;\n    //    this.state.score = 0;\n    //       this.state.clicked : [];\n    // } else { this.state.score++;}\n    //   scuttlebutt = () =>\n    //   return( \n    // let bugs = _.shuffle(this.state.bugs);\n    // this.setState({bugs});)\n  };\n\n\n\n\n  // shuffleBug = id => {\n  //   let bugs = _.shuffle(this.state.bugs);\n  //   this.setState({bugs});\n    \n  //   this.state.clicked.includes(id) ? \n  //   this.setState({highScore : Math.max(this.state.highScore, this.state.score), score:0, clicked :[]}) : \n  //   (this.state.score++, this.state.clicked.push(id), console.log (this.state.clicked), this.setState({clicked: this.state.clicked}))\n     \n  //   // this.state.clicked.includes(id) ? this.state.clicked = [] : console.log (\"false\");\n  //   // this.state.clicked.includes(id) ? this.state.score = 0 : console.log (\"false\");\n\n  //   // if (this.state.clicked.includes(id)) {\n  //   //   this.state.highScore = this.state.score;\n  //   //    this.state.score = 0;\n  //   //       this.state.clicked : [];\n  //   // } else { this.state.score++;}\n  //   //   scuttlebutt = () =>\n  //   //   return( \n  //   // let bugs = _.shuffle(this.state.bugs);\n  //   // this.setState({bugs});)\n  // };\n\n\n  // shuffleBug = id => {\n  //   this.state.clicked.includes(id) ? this.setState({highScore : Math.max( this.state.score, this.state.score), score:0, clicked :[]}) : this.state.score++;\n     \n  //   // this.state.clicked.includes(id) ? this.state.clicked = [] : console.log (\"false\");\n  //   // this.state.clicked.includes(id) ? this.state.score = 0 : console.log (\"false\");\n\n  //   // if (this.state.clicked.includes(id)) {\n  //   //   this.state.highScore = this.state.score;\n  //   //    this.state.score = 0;\n  //   //       this.state.clicked : [];\n  //   // } else { this.state.score++;}\n  //   console.log (this.state.clicked);\n\n  //   let bugs = _.shuffle(this.state.bugs);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.state.clicked.push(id);\n  //   this.setState({ bugs, clicked : this.state.clicked});\n \n  // };\n\n//ternary is only required for inside JSX\n//jsx is limited to a simple expression or ternary not anything like an if or a switch\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      \n      <Wrapper>\n        <Header/>\n        <Score score={this.state.score} highScore={this.state.highScore}/>\n        {/* <Title>Slug Bug Clicky Game</Title> */}\n        {this.state.bugs.map(bug => (\n          <BugCard\n            shuffleBug={this.shuffleBug}\n            id={bug.id}\n            key={bug.id}\n            name={bug.name}\n            image={bug.image}\n       \n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}